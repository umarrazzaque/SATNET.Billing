@model SATNET.WebApp.Models.CreateHardwareKitModel
@*@{
        var controller = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();
    }*@

<!-- Main content -->
    <form method="post" data-ajax="true" asp-controller="HardwareMM" asp-action="Edit" data-ajax-method="post"
          enctype="multipart/form-data" id="formAdd" autocomplete="off">
        @Html.HiddenFor(model => model.HardwareKitModel.Id)
        <div class="app-page-title">
            <div class="page-title-wrapper">
                <div class="page-title-heading">
                    <div>
                        Edit Hardware Kit
                        <div class="page-title-subheading">
                            Please fillout following form
                        </div>
                    </div>
                </div>
                <div class="page-title-actions">
                    <div class="d-inline-block dropdown">
                        <a href="@String.Format("/{0}", "HardwareKit/Index")" class=" btn btn-danger">
                            Cancel
                        </a>
                        <button type="submit" class="btn btn-default">Save Hardware Kit</button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="col-lg-4">
                <div class="position-relative form-group">
                    @Html.LabelFor(model => model.HardwareKitModel.KitName, new { })
                    @Html.EditorFor(model => model.HardwareKitModel.KitName, new { htmlAttributes = new { @class = "form-control text-input", @placeholder = "Kit Name", @type = "text" } })
                </div>
            </div>
            <div class="col-lg-4">
                <div class="position-relative form-group">
                    @Html.LabelFor(model => model.HardwareKitModel.ModemModelId, new { })
                    @Html.DropDownListFor(model => model.HardwareKitModel.ModemModelId, new SelectList(Model.ModemModels as System.Collections.IEnumerable, "Id", "HCValue"), "--Select Modem Model--", new { @class = "form-control select2 text-input" })
                </div>
            </div>
            <div class="col-lg-4">
                <div class="position-relative form-group">
                    @Html.LabelFor(model => model.HardwareKitModel.AntennaMeterId, new { })
                    @Html.DropDownListFor(model => model.HardwareKitModel.AntennaMeterId, new SelectList(Model.AntennaMeters as System.Collections.IEnumerable, "Id", "HCValue"), "--Select Antenna Meter--", new { @class = "form-control select2 text-input" })
                </div>
            </div>
            <div class="col-lg-4">
                <div class="position-relative form-group">
                    @Html.LabelFor(model => model.HardwareKitModel.PowerWATT, new { })
                    @Html.EditorFor(model => model.HardwareKitModel.PowerWATT, new { htmlAttributes = new { @class = "form-control text-input", @placeholder = "Power Watt", @type = "number" } })
                </div>
            </div>
            <div class="col-lg-4">
                <div class="position-relative form-group">
                    @Html.LabelFor(model => model.HardwareKitModel.NPRMPieces, new { })
                    @Html.EditorFor(model => model.HardwareKitModel.NPRMPieces, new { htmlAttributes = new { @class = "form-control text-input", @placeholder = "NPRM Pieces", @type = "number" } })
                </div>
            </div>
            <div class="col-lg-4">
                <div class="position-relative form-group">
                    @Html.LabelFor(model => model.HardwareKitModel.RG6, new { })
                    @Html.EditorFor(model => model.HardwareKitModel.RG6, new { htmlAttributes = new { @class = "form-control text-input", @placeholder = "RG 6 Meters", @type = "number" } })
                </div>
            </div>
            <div class="col-lg-4">
                <div class="position-relative form-group">
                    @Html.LabelFor(model => model.HardwareKitModel.ConnectorPieces, new { })
                    @Html.EditorFor(model => model.HardwareKitModel.ConnectorPieces, new { htmlAttributes = new { @class = "form-control text-input", @placeholder = "Connector Pieces", @type = "number" } })
                </div>
            </div>
        </div>
    </form>

<!-- /.Main content -->

<script language="javascript" type="text/javascript">
    //$.validator.unobtrusive.parse('#formAdd');

</script>
